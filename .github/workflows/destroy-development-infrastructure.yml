name: Destroy Development Infrastructure

on:
  workflow_call:
    inputs:
      tf_workspace:
        type: string
      
jobs:
  destroy_development_infrastructure:
    runs-on: ubuntu-latest
    environment: development
    env:
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
      TF_WORKSPACE: ${{ inputs.tf_workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: huynhlkevin/personal-website-infrastructure

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false

      - name: Get Terraform workspace
        id: check-terraform-workspace-exists
        run: |
          RESULT=$(curl \
          -X GET \
          -H "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" \
          https://app.terraform.io/api/v2/organizations/${{ env.TF_CLOUD_ORGANIZATION }}/workspaces/${{ env.TF_WORKSPACE }})
          echo "result=$RESULT" >> "$GITHUB_OUTPUT"

      - name: Delete Terraform workspace
        if: fromJson(steps.check-terraform-workspace-exists.outputs.result).data
        run: |
          curl \
          -X POST \
          -H "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" \
          -H "Content-Type: application/vnd.api+json" \
          https://app.terraform.io/api/v2/workspaces/${{ fromJson(steps.get-terraform-workspace.outputs.result).data.id }}/actions/safe-delete