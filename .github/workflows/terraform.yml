name: "Terraform"

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}

permissions:
  contents: read

jobs:
  terraform_development_deploy:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: ${{ vars.TF_DEVELOPMENT_WORKSPACE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      - name: Terraform Output (Invoke URL)
        id: terraform-rest-api-invoke-url
        run: terraform output rest_api_invoke_url

      - name: Terraform Output (API Key)
        id: terraform-rest-api-key
        run: terraform output rest_api_key

      - name: Terraform Output (Bucket)
        id: terraform-bucket-name
        run: terraform output bucket_name

      - name: Deploy Frontend
        uses: huynhlkevin/personal-website/.github/workflows/deploy.yml@create-developer-configuration
        with:
          rest_api_endpoint: ${{ steps.terraform-rest-api-invoke-url.outputs.stdout }}
          rest_api_key: ${{ steps.terraform-rest-api-key.outputs.stdout }}
          bucket_name: ${{ steps.terraform-bucket-name.outputs.stdout }}

      - name: Terraform Output (CloudFront Domain Name)
        run: terraform output cloudfront_domain_name

  terraform_development_destroy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: ${{ vars.TF_DEVELOPMENT_WORKSPACE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false

  terraform_production_deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: ${{ vars.TF_PRODUCTION_WORKSPACE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        run: terraform fmt -check
      
      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false