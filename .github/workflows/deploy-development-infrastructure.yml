name: Deploy Development Infrastructure

on:
  workflow_call:
    inputs:
      tf_workspace:
        type: string
        required: true
    outputs:
      rest_api_endpoint: 
        value: ${{ jobs.deploy_development_infrastructure.outputs.rest_api_endpoint }}
      rest_api_key: 
        value: ${{ jobs.deploy_development_infrastructure.outputs.rest_api_key }}
      bucket_name: 
        value: ${{ jobs.deploy_development_infrastructure.outputs.bucket_name }}
      website_url:
        value: ${{ jobs.deploy_development_infrastructure.outputs.cloudfront_domain_name }}

jobs:
  deploy_development_infrastructure:
    runs-on: ubuntu-latest
    environment: development
    env:
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
      TF_WORKSPACE: ${{ inputs.tf_workspace }}
      
    steps:
      - name: Create new Terraform workspace
        id: create-new-terraform-workspace
        run: |
          RESULT=$(curl \
          -X POST \
          -H "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" \
          -H "Content-Type: application/vnd.api+json" \
          -d '{
                "data": {
                  "type": "workspace",
                  "attributes": {
                    "name": "${{ env.TF_WORKSPACE }}"
                  }
                }
              }' \
          https://app.terraform.io/api/v2/organizations/${{ env.TF_CLOUD_ORGANIZATION }}/workspaces)
          echo "result=$RESULT" >> "$GITHUB_OUTPUT"

      - name: Add AWS role to Terraform cloud workspace
        run: |
          curl \
          -X POST \
          -H "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" \
          -H "Content-Type: application/vnd.api+json" \
          -d '{
                "data": {
                  "type": "vars",
                  "attributes": {
                    "key": "TFC_AWS_RUN_ROLE_ARN",
                    "value": "${{ secrets.TFC_AWS_RUN_ROLE_ARN }}",
                    "category": "env",
                    "sensitive": true
                  }
                }
              }' \
          https://app.terraform.io/api/v2/workspaces/${{ fromJson(steps.create-new-terraform-workspace.outputs.result).data.id }}/vars

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: huynhlkevin/personal-website-infrastructure

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      - name: Terraform Output (API Endpoint)
        id: terraform_rest_api_endpoint
        run: terraform output -raw rest_api_invoke_url

      - name: Terraform Output (API Key)
        id: terraform_rest_api_key
        run: terraform output -raw rest_api_key

      - name: Terraform Output (Bucket name)
        id: terraform_bucket_name
        run: terraform output -raw bucket_name

      - name: Terraform Output (CloudFront Domain Name)
        id: terraform_cloudfront_domain_name
        run: terraform output -raw cloudfront_domain_name

    outputs:
      rest_api_endpoint: ${{ steps.terraform_rest_api_endpoint.outputs.stdout }}
      rest_api_key: ${{ steps.terraform_rest_api_key.outputs.stdout }}
      bucket_name: ${{ steps.terraform_bucket_name.outputs.stdout }}
      cloudfront_domain_name: ${{ steps.terraform_cloudfront_domain_name.outputs.stdout }}